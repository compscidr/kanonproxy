name: Test and Reports

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'
  pull_request:
    types: [ opened, synchronize ]

jobs:
  build:
    runs-on: ubuntu-latest
    environment:
      name: dev
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
          clean: true
      - name: Set up JDK
        uses: actions/setup-java@v5
        with:
          java-version: 21
          distribution: temurin
      - name: Grant permissions for user space Icmp
        run: sudo sysctl -w net.ipv4.ping_group_range="0   2147483647"
      - name: Build with Gradle
        run: ./gradlew clean assemble --no-build-cache
      - name: JVM unit Tests with Coverage Report
        run: ./gradlew check
        timeout-minutes: 3
      # tar the reports since its much faster uploading multiple files
      - name: Tar Reports
        if: always()
        run: |
          pwd
          ls -la
          mkdir -p ./core/build/reports/ &&
          tar -czvf kanonproxy-reports.tar.gz -C core/build reports
      - name: Upload Reports
        uses: actions/upload-artifact@v4.6.2
        if: always()
        with:
          name: kanonproxy-reports
          path: kanonproxy-reports.tar.gz
      - name: Upload Lib Unit Tests Report to CodeCov
        # https://github.com/codecov/codecov-action
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: libunittests
          files: ./core/build/reports/jacoco/test/jacocoTestReport.xml
      - name: Docker Integration Tests
        run: |
          echo "Building Docker images for integration tests..."
          docker compose -f docker-compose.ci.yml build

          echo "Starting proxy server..."
          docker compose -f docker-compose.ci.yml up -d proxy-server

          echo "Waiting for server to initialize..."
          sleep 15

          echo "Checking server health..."
          docker compose -f docker-compose.ci.yml ps

          echo "Running integration tests..."
          docker compose -f docker-compose.ci.yml run --rm test-runner

          echo "Showing server logs..."
          docker compose -f docker-compose.ci.yml logs proxy-server
        timeout-minutes: 5
      - name: Cleanup Docker
        if: always()
        run: docker compose -f docker-compose.ci.yml down
