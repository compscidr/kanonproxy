name: Test and Reports

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'
  pull_request:
    types: [ opened, synchronize ]

jobs:
  build:
    runs-on: ubuntu-latest
    environment:
      name: dev
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
          clean: true
      - name: Set up JDK
        uses: actions/setup-java@v5
        with:
          java-version: 21
          distribution: temurin
      - name: Grant permissions for user space Icmp
        run: sudo sysctl -w net.ipv4.ping_group_range="0   2147483647"
      - name: Build with Gradle
        run: ./gradlew clean assemble --no-build-cache
      - name: JVM unit Tests with Coverage Report
        run: ./gradlew check
        timeout-minutes: 3
      # tar the reports since its much faster uploading multiple files
      - name: Tar Reports
        if: always()
        run: |
          pwd
          ls -la
          mkdir -p ./core/build/reports/ &&
          tar -czvf kanonproxy-reports.tar.gz -C core/build reports
      - name: Upload Reports
        uses: actions/upload-artifact@v4.6.2
        if: always()
        with:
          name: kanonproxy-reports
          path: kanonproxy-reports.tar.gz
      - name: Upload Lib Unit Tests Report to CodeCov
        # https://github.com/codecov/codecov-action
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: libunittests
          files: ./core/build/reports/jacoco/test/jacocoTestReport.xml
      - name: Validate Docker Configuration
        run: |
          echo "Validating Docker setup..."
          echo "Checking required files exist..."
          test -f Dockerfile && echo "✓ Dockerfile exists" || echo "✗ Dockerfile missing"
          test -f docker-compose.ci.yml && echo "✓ docker-compose.ci.yml exists" || echo "✗ docker-compose.ci.yml missing"
          test -f docker-compose.test.yml && echo "✓ docker-compose.test.yml exists" || echo "✗ docker-compose.test.yml missing"
          echo ""
          echo "Docker version:"
          docker --version
          echo "Docker Compose version:"
          docker compose version
      - name: Docker Integration Tests
        run: |
          echo "========================================="
          echo "Docker Integration Tests"
          echo "========================================="

          echo "Checking Docker Compose file exists..."
          ls -la docker-compose.ci.yml || (echo "ERROR: docker-compose.ci.yml not found!" && exit 1)

          echo ""
          echo "Building Docker images for integration tests..."
          docker compose -f docker-compose.ci.yml build --progress=plain 2>&1 | tail -50 || (
            echo "ERROR: Docker build failed!"
            exit 1
          )

          echo ""
          echo "Starting proxy server..."
          docker compose -f docker-compose.ci.yml up -d proxy-server || (
            echo "ERROR: Failed to start proxy server!"
            docker compose -f docker-compose.ci.yml logs
            exit 1
          )

          echo ""
          echo "Waiting for server to initialize..."
          for i in {1..30}; do
            if docker compose -f docker-compose.ci.yml ps proxy-server | grep -q "healthy\|Up"; then
              echo "Server is up! (attempt $i/30)"
              break
            fi
            echo "Waiting for server... (attempt $i/30)"
            sleep 2
          done

          echo ""
          echo "Checking server health..."
          docker compose -f docker-compose.ci.yml ps

          echo ""
          echo "Checking if server is listening..."
          docker compose -f docker-compose.ci.yml exec proxy-server netstat -anu | grep 8080 || (
            echo "WARNING: Server may not be listening on port 8080"
          )

          echo ""
          echo "Running integration tests..."
          docker compose -f docker-compose.ci.yml run --rm test-runner || (
            echo "ERROR: Integration tests failed!"
            echo "Showing server logs..."
            docker compose -f docker-compose.ci.yml logs proxy-server
            exit 1
          )

          echo ""
          echo "Showing server logs for verification..."
          docker compose -f docker-compose.ci.yml logs proxy-server | tail -50

          echo ""
          echo "========================================="
          echo "Docker Integration Tests PASSED"
          echo "========================================="
        timeout-minutes: 10
      - name: Cleanup Docker
        if: always()
        run: |
          echo "Cleaning up Docker containers..."
          docker compose -f docker-compose.ci.yml down -v || true
          docker compose -f docker-compose.ci.yml ps || true
